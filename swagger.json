{
  "swagger": "2.0",
  "info": {
    "description": "Este documento especifica como deve ser consumida a API de dados de leituras de sensores",
    "version": "1.0.0",
    "title": "API PackID"
  },
  "host": "app.packid.com.br",
  "basePath": "/api/v2",
  "tags": [
    {
      "name": "measurements",
      "description": "Rotas para dados de leituras de sensores"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/company/{company_id}/sensors/last-measurements": {
      "get": {
        "tags": [
          "measurements"
        ],
        "summary": "Retorna todas as últimas leituras de todos os sensores de uma company",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "company_id",
            "in": "path",
            "description": "Id da empresa que será usada",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Retorno com todos os sensores da empresa contendo dentro deles os dados da última leitura dos mesmos.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SensorLastMeasurement"
              }
            }
          },
          "400": {
            "description": "Parâmetro company_id inválido"
          },
          "401": {
            "description": "Token inválido"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/company/{company_id}/groups": {
      "get": {
        "tags": [
          "measurements"
        ],
        "summary": "Retorna todos os grupos de sensores junto com informações dos mesmos",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "company_id",
            "in": "path",
            "description": "Id da empresa que será usada",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Retorno com todos os grupos de uma empresa e informações de todos os sensores do grupo contendo dentro deles os dados da última leitura dos mesmos.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GroupItem"
              }
            }
          },
          "400": {
            "description": "Parâmetro company_id inválido"
          },
          "401": {
            "description": "Token inválido"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/company/{company_id}/sensors/history": {
      "post": {
        "tags": [
          "measurements"
        ],
        "summary": "Retorna leituras de sensores durante um período",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "company_id",
            "in": "path",
            "description": "Id da empresa que será usada",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "filter_params",
            "description": "Dados para filtrar dados do histórico - IMPORTANTE: Datas devem ser todas na timezone do Brasil (-03:00)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FilterParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorno com todos os sensores e suas leituras no período selecionado pela requisição.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SensorHistory"
              }
            }
          },
          "400": {
            "description": "Parâmetros inválidos"
          },
          "401": {
            "description": "Token inválido"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/company/{company_id}/sensors/history/individual-filtering": {
      "post": {
        "tags": [
          "measurements"
        ],
        "summary": "Retorna leituras de sensores durante um período filtrando com critérios individuais cada sensor",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "company_id",
            "in": "path",
            "description": "Id da empresa que será usada",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "individual_filter_params",
            "description": "Dados separados individualmente para filtrar dados do histórico - IMPORTANTE: Datas devem ser todas na timezone do Brasil (-03:00)",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IndividualParams"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorno com todos os sensores e suas leituras no período selecionado pela requisição usando os critérios de filtro individuais.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SensorHistory"
              }
            }
          },
          "400": {
            "description": "Parâmetros inválidos"
          },
          "401": {
            "description": "Token inválido"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/users/{user_id}/companies/serials": {
      "get": {
        "tags": [
          "measurements"
        ],
        "summary": "Retorna todos os serias dos sensores vinculados a alguma empresa do usuário",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "Id do usuário que será usado",
            "required": true,
            "type": "integer"
          },
          {
            "name": "sensor_type",
            "in": "query",
            "description": "Tipo dos sensores, pode ter o valor 'transport' ou 'fixed'. Se deixado em branco retorna todos de todos os tipos.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Retorno com todos os seriais de todos os sensores que um usuário tem acesso considerando todas as empresas vinculadas a ele.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Parâmetro user_id inválido"
          },
          "401": {
            "description": "Token inválido"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Token para acesso fornecido pela PackID"
    }
  },
  "definitions": {
    "SensorHistory": {
      "type": "object",
      "properties": {
        "serial": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "example": "fixed|transport"
        },
        "temperature_min": {
          "type": "number",
          "format": "float"
        },
        "temperature_max": {
          "type": "number",
          "format": "float"
        },
        "measurements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Measurement"
          }
        }
      }
    },
    "SensorLastMeasurement": {
      "type": "object",
      "properties": {
        "serial": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "example": "fixed|transport"
        },
        "temperature_min": {
          "type": "number",
          "format": "float"
        },
        "temperature_max": {
          "type": "number",
          "format": "float"
        },
        "last_measurement": {
          "$ref": "#/definitions/Measurement"
        }
      }
    },
    "GroupItem": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "temperature_min": {
          "type": "number",
          "format": "float"
        },
        "temperature_max": {
          "type": "number",
          "format": "float"
        },
        "sensors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SensorLastMeasurement"
          }
        }
      }
    },
    "Measurement": {
      "type": "object",
      "properties": {
        "temperature": {
          "type": "number",
          "format": "float",
          "description": "Temperatura da leitura"
        },
        "humidity": {
          "type": "number",
          "format": "float",
          "description": "Humidade da leitura"
        },
        "date_hour": {
          "type": "string",
          "description": "Data da leitura",
          "format": "date-time"
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "Latitude que a leitura foi lida"
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "description": "Longitude que a leitura foi lida"
        }
      }
    },
    "FilterParams": {
      "type": "object",
      "properties": {
        "serials": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "before": {
          "type": "string",
          "format": "date-time"
        },
        "after": {
          "type": "string",
          "format": "date-time"
        },
        "date_field_to_use": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "IndividualParams": {
      "type": "object",
      "properties": {
        "serials": {
          "type": "string"
        },
        "before": {
          "type": "string",
          "format": "date-time"
        },
        "after": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  }
}